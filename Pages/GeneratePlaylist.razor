@page "/generate-playlist"
@inject SpotifyApiService SpotifyApiService
@inject SpotifyAuthService SpotifyAuthService
@inject NavigationManager Navigation

<div class="container text-center mt-5">
    <h2 class="text-primary">Generate Your Spotify Playlist</h2>
    <p class="lead text-muted">Enter a theme, and we'll create a playlist for you.</p>

    <div class="mb-4">
        <input @bind="prompt" class="form-control form-control-lg mt-2" placeholder="Enter a music theme...">
    </div>

    <button class="btn btn-success btn-lg" @onclick="Generate">Generate Playlist</button>

    @if (!string.IsNullOrEmpty(statusMessage))
    {
        <div class="alert alert-info mt-3">@statusMessage</div>
    }

    @if (trackList?.Any() == true)
    {
        <h4 class="mt-4">Added Tracks:</h4>
        <div class="row">
            @foreach (var track in trackList)
            {
                <div class="col-md-4">
                    <div class="card mb-3 shadow">
                        <img src="@track.ImageUri" class="card-img-top" alt="Track Image">
                        <div class="card-body">
                            <p class="card-text text-center">@track.Name</p>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@code {
    private string prompt = "";
    private string statusMessage = "";
    private List<TrackModel> trackList = new();

    private async Task Generate()
    {
        var accessToken = await SpotifyAuthService.GetStoredAccessToken();
        if (string.IsNullOrEmpty(accessToken))
        {
            statusMessage = "You need to log in";
            return;
        }

        var userId = await SpotifyApiService.GetUserId(accessToken);

        try
        {
            var tracks = await SpotifyApiService.SearchTracksByPrompt(prompt, accessToken);
            trackList = tracks.Select(t => new TrackModel { Name = t.Name, ImageUri = t.ImageUri }).ToList();

            var playlistId = await SpotifyApiService.CreatePlaylistByPrompt($"Playlist: {prompt}", "Generated by Spotly", prompt,
            accessToken, userId);
            statusMessage = $"Playlist created! ID: {playlistId}";
        }
        catch (Exception ex)
        {
            statusMessage = $"Error: {ex.Message}";
        }
    }
}
